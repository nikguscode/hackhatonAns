const LOGIN_API_URL = "http://127.0.0.1:8081/api/login"; 
const MAIN_PAGE_URL = "main.html";


// --- –†–ï–ì–£–õ–Ø–†–ù–´–ï –í–´–†–ê–ñ–ï–ù–ò–Ø ---
const USERNAME_REGEX = /^[a-zA-Z0-9_]{4,20}$/; 
const PASSWORD_REGEX = /^.{6,50}$/;

document.getElementById('loginForm').addEventListener('submit', async function(e) {
    e.preventDefault();

    const username = e.target.username.value;
    const password = e.target.password.value;
    const loginButton = document.getElementById('loginButton');
    const errorMessage = document.getElementById('error-message');


    errorMessage.classList.add('hidden');
    loginButton.disabled = true;
    loginButton.textContent = "–ü—Ä–æ–≤–µ—Ä–∫–∞...";

    if (!USERNAME_REGEX.test(username)) {
        errorMessage.textContent = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ª–æ–≥–∏–Ω–∞.";
        errorMessage.classList.remove('hidden');
        loginButton.disabled = false;
        loginButton.textContent = "–í–û–ô–¢–ò";
        return; 
    }
    
    if (!PASSWORD_REGEX.test(password)) {
        errorMessage.textContent = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–∞—Ä–æ–ª—è.";
        errorMessage.classList.remove('hidden');
        loginButton.disabled = false;
        loginButton.textContent = "–í–û–ô–¢–ò";
        return;
    }
    
    // 2. –û–¢–ü–†–ê–í–ö–ê POST-–ó–ê–ü–†–û–°–ê –ö –ë–≠–ö–ï–ù–î–£
    try {
        const response = await fetch(LOGIN_API_URL, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            // üí° –í–ê–ñ–ù–û: –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä–æ–µ –æ–∂–∏–¥–∞–µ—Ç –≤–∞—à LoginController
            body: JSON.stringify({
                login: username,
                password: password
            }),
            // üí° –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–º–∏ –∫—É–∫–∞–º–∏
            credentials: 'include' 
        });

        // 3. –û–ë–†–ê–ë–û–¢–ö–ê –û–¢–í–ï–¢–ê
       if (response.ok) { // –°—Ç–∞—Ç—É—Å 200 OK - –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥
            
            // !!! –ù–û–í–û–ï: –ß–∏—Ç–∞–µ–º —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (Employee DTO) !!!
            const employeeData = await response.json(); 
            
            // üí° –ö–õ–Æ–ß–ï–í–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –∏ –º–∞–ø–ø–∏–Ω–≥
            const apiRole = employeeData.role; // –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –∏–∑ DTO
            let userRole = apiRole; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ–ª—å –∏–∑ API
            
            // –ú–∞–ø–ø–∏–Ω–≥ —Ä–æ–ª–∏: ADMIN -> super_admin
            if (apiRole === 'ADMIN') {
                userRole = 'super_admin';
            } else if (apiRole === 'VOLUNTEER') {
                userRole = 'volunteer'; // VOLUNTEER –æ—Å—Ç–∞–µ—Ç—Å—è VOLUNTEER
            }
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞: –ï—Å–ª–∏ API –≤–µ—Ä–Ω—É–ª–æ 'VOLUNTEER', userRole –±—É–¥–µ—Ç 'VOLUNTEER'.
            // –ï—Å–ª–∏ API –≤–µ—Ä–Ω—É–ª–æ 'ADMIN', userRole –±—É–¥–µ—Ç 'super_admin'.
           
            
            // üö® –°–û–•–†–ê–ù–Ø–ï–ú –†–û–õ–¨ –í SESSION STORAGE
            sessionStorage.setItem('userRole', userRole); 
            
            // üíæ –°–û–•–†–ê–ù–Ø–ï–ú DTO –í LOCAL STORAGE
            try {
                // –ü–µ—Ä–µ–≤–æ–¥–∏–º –æ–±—ä–µ–∫—Ç –≤ —Å—Ç—Ä–æ–∫—É JSON –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                localStorage.setItem('employeeData', JSON.stringify(employeeData));
                console.log("–î–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage.");
                console.log("–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Ä–æ–ª—å:", userRole);
            } catch (storageError) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ localStorage:", storageError);
            }

            console.log("–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥. –ü–æ–ª—É—á–µ–Ω–∞ —Å–µ—Å—Å–∏–æ–Ω–Ω–∞—è –∫—É–∫–∞ –∏ —Ä–æ–ª—å.");
            window.location.href = MAIN_PAGE_URL;

        } else if (response.status === 401) { // –°—Ç–∞—Ç—É—Å 401 Unauthorized - –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            console.log("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: 401 Unauthorized.");
            // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥, –∫–∞–∫ –≤—ã –ø—Ä–æ—Å–∏–ª–∏.
            
            // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É –≤ —Ñ–æ—Ä–º–µ:
            errorMessage.textContent = "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å.";
            errorMessage.classList.remove('hidden');

        } else {
            // –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ (500 Internal Server Error, 404 Not Found –∏ —Ç.–¥.)
            console.error(`–û—à–∏–±–∫–∞ API: –°—Ç–∞—Ç—É—Å ${response.status}`);
            errorMessage.textContent = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
            errorMessage.classList.remove('hidden');
        }

    } catch (error) {
        // –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ (–±—ç–∫–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, CORS –∏ —Ç.–¥.)
        console.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:", error);
        errorMessage.textContent = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.";
        errorMessage.classList.remove('hidden');

    } finally {
        loginButton.disabled = false;
        loginButton.textContent = "–í–û–ô–¢–ò";
    }
});

