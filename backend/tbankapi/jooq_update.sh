#!/bin/bash

# --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env ---
if [ -f .env ]; then
    # –ò—Å—Ç–æ—á–Ω–∏–∫ .env –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏, —á—Ç–æ–±—ã Maven –º–æ–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å $API_POSTGRES_USER –∏ $API_POSTGRES_PASSWORD
    source .env
    echo "–£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env –¥–ª—è Maven-–∫–æ–º–∞–Ω–¥—ã."
else
    echo "üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –∏ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞."
    exit 1
fi

# --- –®–ê–ì 1: –ó–∞–ø—É—Å–∫ Docker Compose (–¢–æ–ª—å–∫–æ –ë–î) ---
echo "1. –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (api-db) –∏ –æ–∂–∏–¥–∞–Ω–∏–µ –µ–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏..."
# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å api-db
docker compose up -d --build api-db

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –ë–î –ø–æ–¥–Ω—è–ª—Å—è
if [ $? -ne 0 ]; then
    echo "üö® –û—à–∏–±–∫–∞: Docker Compose –Ω–µ —Å–º–æ–≥ –∑–∞–ø—É—Å—Ç–∏—Ç—å api-db. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏."
    exit 1
fi

# --- –®–ê–ì 2: –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î (–∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ) ---
echo "2. –û–∂–∏–¥–∞–Ω–∏–µ, –ø–æ–∫–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö (api-db) —Å—Ç–∞–Ω–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ—Å—Ç—É–ø–Ω–∞..."
MAX_RETRIES=15
WAIT_TIME=2
RETRY_COUNT=0
DB_USER=${API_POSTGRES_USER}
DB_NAME=${API_POSTGRES_DB}

while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≥–æ—Ç–æ–≤ –ª–∏ PostgreSQL –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.
    STATUS=$(docker compose exec api-db pg_isready -h localhost -U "${DB_USER}" -d "${DB_NAME}" 2>&1)
    
    if [[ "$STATUS" == *accepting\ connections* ]]; then
        echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞!"
        sleep 5 
        break
    fi

    echo "   –ü–æ–ø—ã—Ç–∫–∞ ${RETRY_COUNT}/${MAX_RETRIES}: –û–∂–∏–¥–∞–Ω–∏–µ... ($STATUS)"
    sleep $WAIT_TIME
    RETRY_COUNT=$((RETRY_COUNT + 1))
done

if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
    echo "üö® –û—à–∏–±–∫–∞: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å –≤–æ–≤—Ä–µ–º—è. –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ."
    exit 1
fi

# --- –®–ê–ì 3: –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ jOOQ –Ω–∞ —Ö–æ—Å—Ç–µ ---
echo "3. –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π Liquibase –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ jOOQ-–∫–æ–¥–∞ (mvn clean install)..."

# –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º jOOQ-–∫–æ–¥, —Å–æ–∑–¥–∞–≤–∞—è –Ω–æ–≤—ã–π JAR
mvn clean install -Prun-migrations -Pdefault-dev

if [ $? -ne 0 ]; then
    echo "üö® –û—à–∏–±–∫–∞: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Maven-—Å–±–æ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å –Ω–µ—É–¥–∞—á–µ–π. JAR –Ω–µ —Å–æ–∑–¥–∞–Ω/–Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω."
    exit 1
fi

# --- –®–ê–ì 4: –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ API —Å –Ω–æ–≤—ã–º JAR ---
echo "4. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ API –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ JAR-—Ñ–∞–π–ª–∞..."

# –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º docker compose up, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ–∑–¥–∞–Ω –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω.
# –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω, Docker Compose –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç –µ–≥–æ, –ø–æ–¥—Ö–≤–∞—Ç–∏—Ç –Ω–æ–≤—ã–π JAR (–µ—Å–ª–∏ —É –≤–∞—Å 
# –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–º–∞) –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç –µ–≥–æ.
docker compose up -d api

if [ $? -ne 0 ]; then
    echo "üö® –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä 'api'."
    exit 1
fi

echo "‚ú® –£—Å–ø–µ—à–Ω–æ: –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã, jOOQ-–∫–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä API –∑–∞–ø—É—â–µ–Ω —Å –Ω–æ–≤—ã–º JAR."
